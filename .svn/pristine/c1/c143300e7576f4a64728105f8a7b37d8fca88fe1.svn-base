
package tw.edu.ntut.csie.game.state;

import java.util.HashMap;
import java.util.Map;

import tw.edu.ntut.csie.game.Game;
import tw.edu.ntut.csie.game.R;
import tw.edu.ntut.csie.game.Stair;
import tw.edu.ntut.csie.game.leadingRole;
import tw.edu.ntut.csie.game.core.MovingBitmap;
import tw.edu.ntut.csie.game.engine.GameEngine;
import tw.edu.ntut.csie.game.extend.Animation;
import tw.edu.ntut.csie.game.extend.BitmapButton;
import tw.edu.ntut.csie.game.extend.ButtonEventHandler;
import tw.edu.ntut.csie.game.state.AbstractGameState;

public class StateReady extends AbstractGameState {

	private MovingBitmap _under;
	private MovingBitmap _role;
	private int _rx;
	/*
	private MovingBitmap _helpInfo;
	
	
	private BitmapButton _exitButton;
	private BitmapButton _helpButton;
	private BitmapButton _menuButton;
	
	*/
	private MovingBitmap _aboutInfo;
	private BitmapButton _aboutButton;
	
	
	private MovingBitmap _background;	
	private MovingBitmap _title;
	private Animation _tap;
	private MovingBitmap _tapFrame1;
	private MovingBitmap _tapFrame2;
	private MovingBitmap _tapFrame3;
	private MovingBitmap _tapFrame4;
	private MovingBitmap[] _rainbow;

	private BitmapButton _startButton;
	
	private boolean _showHelp;
	private boolean _showAbout;

	public StateReady(GameEngine engine) {
		super(engine);
	}

	@Override
	public void initialize(Map<String, Object> data) {
		
		//addGameObject(_helpInfo = new MovingBitmap(R.drawable.help_info));
		
		addGameObject(_aboutInfo = new MovingBitmap(R.drawable.about_info));
		
		addGameObject(_background = new MovingBitmap(R.drawable.background));
		//_background.resize(386, 642);
		_background.resize(410, 681);
		_background.setLocation(-4, -15);

		addGameObject(_under = new MovingBitmap(R.drawable.under));
		_under.resize((int)(_under.getWidth()*0.64), (int)(_under.getHeight()*0.64));
		_under.setLocation((376/2)-(_under.getWidth()/2), 640-_under.getHeight()+27);
		
		
		addGameObject(_role = new MovingBitmap(R.drawable.jelly));
		_role.resize((int)(_role.getWidth()*0.6), (int)(_role.getHeight()*0.6));
		_role.setLocation(188-(_role.getWidth()/2), _under.getY()-_role.getHeight()+6);
		_rx = 188-(_role.getWidth()/2);
		
		_rainbow = new MovingBitmap[384];

		/*for(int i=0;i<384;i++){
			addGameObject(_rainbow[i] = new MovingBitmap(R.drawable.rainbow));
		
			_rainbow[i].resize((int)(_rainbow[i].getWidth()*0.7), 0-(int)(_rainbow[i].getHeight()*0.7));
		    _rainbow[i].setLocation(i-10, (int)(0.001*(i-193)*(i-193))+70);
		   // _rainbow[i].setLocation(i, (int)(0.001*(i-205)*(i-205)+70));
			/* if(i<45){
			    _rainbow[i].setLocation(3*i, (int)(90-i*0.5));
			}else if(i>=45 && i<105){
				_rainbow[i].setLocation(3*i, 67);
			}else if(i>=105){
				_rainbow[i].setLocation(3*i, (int)(40+i*0.5));
			}*/
		    
		//}
		
		
		addGameObject(_title = new MovingBitmap(R.drawable.happyjump));
		//_title.resize((int)(_title.getWidth()*0.58),(int)( _title.getHeight()*0.58));
		_title.resize((int)(_title.getWidth()*1.1),(int)( _title.getHeight()*1.1 ));
		//_title.setLocation(17, 77);
		_title.setLocation(-5, 70);
		
		/*addGameObject(_tap = new MovingBitmap(R.drawable.tap_to_play));
		_tap.setLocation(85, 426);
		_tap.resize(_tap.getWidth()/2, _tap.getHeight()/2);*/
		
		_tapFrame1 = new MovingBitmap(R.drawable.tap_to_play);
		_tapFrame1.resize((int)(_tapFrame1.getWidth()*0.63), (int)(_tapFrame1.getHeight()*0.63));
		_tapFrame2 = new MovingBitmap(R.drawable.tap_to_play_visible_75); 
		_tapFrame2.resize((int)(_tapFrame2.getWidth()*0.63), (int)(_tapFrame2.getHeight()*0.63));
		_tapFrame3 = new MovingBitmap(R.drawable.tap_to_play_visible);
		_tapFrame3.resize((int)(_tapFrame3.getWidth()*0.63), (int)(_tapFrame3.getHeight()*0.63));
		_tapFrame4 = new MovingBitmap(R.drawable.tap_to_play_visible_75); 
		_tapFrame4.resize((int)(_tapFrame4.getWidth()*0.63), (int)(_tapFrame4.getHeight()*0.63));
		
		addGameObject(_tap = new Animation());
		_tap.addFrame(_tapFrame1);
		_tap.addFrame(_tapFrame2);
		_tap.addFrame(_tapFrame3);
		_tap.addFrame(_tapFrame4);
		_tap.setLocation(61, 425);
		_tap.setDelay(3);
		

		
		initializeStartButton();
		//initializeExitButton();
		//initializeMenuButton();
		//initializeHelpButton();
		initializeAboutButton();
		setVisibility(false, false);
	}
	
	

	// 初始化『About』的按鈕。
	// 開發簡介
	
	/**private void initializeAboutButton() {
		addGameObject(_aboutButton = new BitmapButton(R.drawable.abouthappy, R.drawable.abouthappy, 10, 10));
		_aboutButton.Resize(90, 54);
		_aboutButton.addButtonEventHandler(new ButtonEventHandler() {
			@Override
			public void perform(BitmapButton button) {
				setVisibility(false, true);
			}
		});
		addPointerEventHandler(_aboutButton);
	}
 
	/** 初始化『Help』的按鈕。
	// 遊戲說明
		
	private void initializeHelpButton() {
		addGameObject(_helpButton = new BitmapButton(R.drawable.help, R.drawable.help_pressed, 30, 150));
		_helpButton.addButtonEventHandler(new ButtonEventHandler() {
			@Override
			public void perform(BitmapButton button) {
				setVisibility(true, false);
			}
		});
		addPointerEventHandler(_helpButton);
	}
 */
	
	/** 初始化『Menu』的按鈕。
	
	private void initializeMenuButton() {
		addGameObject(_menuButton = new BitmapButton(R.drawable.menu, R.drawable.menu_pressed, 30, 90));
		_menuButton.addButtonEventHandler(new ButtonEventHandler() {
			@Override
			public void perform(BitmapButton button) {
				setVisibility(false, false);
			}
		});
		addPointerEventHandler(_menuButton);
	}
 */
	/** 初始化『Exit』的按鈕。
	
	private void initializeExitButton() {
		addGameObject(_exitButton = new BitmapButton(R.drawable.exit, R.drawable.exit_pressed, 30, 210));
		_exitButton.addButtonEventHandler(new ButtonEventHandler() {
		//	@Override
			public void perform(BitmapButton button) {
				_engine.exit();
			}
		});
		addPointerEventHandler(_exitButton);
	}
  */
	/** 初始化『Start』的按鈕。 */
	private void initializeStartButton() {
		addGameObject(_startButton = new BitmapButton(R.drawable.backgroundtransparent, R.drawable.backgroundtransparent, -4, 325));//, 386, 150));//642));
		_startButton.addButtonEventHandler(new ButtonEventHandler() {
			@Override
			public void perform(BitmapButton button) {
				Map<String, Object> paras = new HashMap<String, Object>();
				paras.put("jellyLocation", _role.getX());
				changeState(Game.RUNNING_STATE,  paras);
			}
		});
		addPointerEventHandler(_startButton);
	}
	private void initializeAboutButton() {
		addGameObject(_aboutButton = new BitmapButton(R.drawable.abouthappy, R.drawable.abouthappy, 10, 10));
		_aboutButton.addButtonEventHandler(new ButtonEventHandler() {
			@Override
			public void perform(BitmapButton button) {
				setVisibility(false, true);
			}
		});
		addPointerEventHandler(_aboutButton);
	}
	

	@Override
	public void pause() {}

	@Override
	public void resume() {}

	/** 設定畫面上那些圖片該顯示，那些圖片該隱藏。
	 * 
	 * @param showHelp 顯示Help畫面
	 * @param showAbout 顯示About畫面
	 */
	private void setVisibility(boolean showHelp, boolean showAbout) {
		
		_showHelp = showHelp;
		_showAbout = showAbout;
		
		boolean showMenu = !_showAbout && !_showHelp;
		/*
		_helpInfo.setVisible(_showHelp);*/
		_aboutInfo.setVisible(_showAbout);
		
		_startButton.setVisible(showMenu);
		_background.setVisible(showMenu);
		
		/*
		for(int i=0;i<386;i++){
			_rainbow[i].setVisible(showMenu);
		}*/
		//_rainbow[100].setVisible(showMenu);
		_title.setVisible(showMenu);
		
		_tap.setVisible(showMenu);
		_under.setVisible(showMenu);
		_role.setVisible(showMenu);
		
/*
		_exitButton.setVisible(showMenu);
		_helpButton.setVisible(showMenu);*/
		_aboutButton.setVisible(showMenu);
		
		
		//_menuButton.setVisible(!showMenu);
	}
	
	
	public void orientationChanged(float pitch, float azimuth, float roll) {
		if(roll > 1 && roll < 90 ){
			if(_rx > 0-_role.getWidth()){
				_rx -= (int)((Math.sqrt(roll))*2);
			}else{
				_rx = 376;
			}
		}
		if(roll < -1 && roll > -90 ){
			if(_rx < 376){
				_rx += (int)((Math.sqrt(-(roll)))*2);
			}else{
				_rx = 0-_role.getWidth();
			}
		}
		_role.setLocation(_rx, _role.getY());
	}

}

